.item {
    width: 200px;
    height: 200px;
    border: 1px solid#000;
    background-color: cadetblue;
    
}

.container-row {
    display: flex;        /*부모요소에 무조건 display:flex 을 적어준다*/   
    /* 가로축으로 정렬 */  
    flex-direction: row;  /*flex-direction:row; 가 default값이라 안적어도 적용된다.  flex-direction이 주축(주축의 반대는 교차축)을 적용하는 스타일*/

    /* 세로축으로 정렬 */
    /* flex-direction: column; */

    /* 가로축 역순 정렬 */
    /* flex-direction: row-reverse; */

    /* 세로축 역순 정렬 */
    /* flex-direction: column-reverse; */

    /* 보통 역순정렬은 헷갈리기 때문에 쓰지 않는다 */
}

.container-wrap {
    display: flex;

    /* 개행(줄바꿈) 없음 */
    /* flex-wrap: nowrap; */

    /* 너비가 모자르면 개행 */
    flex-wrap: wrap;
    flex-direction: row;
    
    /* 너비가 모자르면 개행 역순 */
    /* flex-wrap: wrap-reverse; */
}

.container-flow {
    display: flex;
    /* flex-direction 과 flex-wrap을 한번에 지정 */
    flex-flow: row wrap;
    flex-direction: row;

    /* flex-direction: row;
       flex-wrap: wrap;       두개 랑 같다.*/
}

.container-justify-content {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;


    /* justify-content : 주축을 기준으로 정렬 */

    /* 주축의 시작점에 맞추어 배치 */
    /* justify-content: flex-start; */
    
    /* 주축의 끝점에 맞추어 배치 */
    /* justify-content: flex-end; */
    
    /* 주축의 가운데에 맞추어 배치 */
    /* justify-content: center; */

    /* 주축의 시작점에 첫번째 항목을 배치하고,
        주축의 끝점에 마지막 항목을 배치하고,
        나머지 항목들을 적정한 간격으로 조절 */
    /* justify-content: space-between; */

    /* 주축의 같은 간격으로 배치 */
    justify-content: space-around;
}
    /* 아이템간의 간격 지정*/
    /* gap: 20px; */
    

    .container-align-items {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        height: 700px;
        background-color: coral;

        /* 교차축의 시작점에 맞춰서 배치 */
        align-items: flex-start;

        /* 교차축의 끝점에 맞춰서 배치 */
        align-items: flex-end;

        /* 교차축의 가운데에 맞춰서 배치 */
        align-items: center;
    }

    .container-align-self {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        height: 700px;
        background-color: coral;
    }
    /* align-self: 교차축의 하나만 따로 배치를 조절할수있다. */

    .container-align-self :nth-child(1) {
        /* 교차축의 시작점에 맞추어 배치 */
        align-self: flex-start;
    }

    .container-align-self :nth-child(2) {
        /* 교차축의 끝점에 맞추어 배치 */
        align-self: flex-end;
    }

    .container-align-self :nth-child(5) {
        /* 교차축의 가운데에 맞추어 배치 */
        align-self: center;
    }
    
    .container-align-content {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        height: 700px;
        background-color: coral;

        /* 교차축의 시작점에 맟추어 배치 */
        align-content: flex-start;

        /* 교차축의 끝점에 맟추어 배치 */
        align-content: flex-end;

        /* 교차축의 가운데에 맞추어 배치 */
        align-content: center;
        /* justify-content: center; */

        /* 교차축의 시작점에 첫번째 항목을 배치하고,
        주축의 끝점에 마지막 항목을 배치하고,
        나머지 항목들을 적정한 간격으로 조절 */
        align-content: space-between;

        /* 교차축의 같은 간격으로 배치 */
        align-content: space-around;
    }

    /* align-item: 한줄을 교차축 기준으로 어떻게 배치할것인가  */
    /* align-self: 교차축의 하나만 따로 배치를 조절할수있다. */
    /* align-content: 전체를 교차축 기준으로 어떻게 배치할것인가  */









/* flex 단점?
    내가 만약 사이즈를 줄였을때 몇개를 주고 싶다 이런 설정을 할수가 없다.
    width,height 사이즈로만 조절해서 반응형을 보고 확인 해야한다.
    내가 몇개가 나오는지 설정할수 없는것 */